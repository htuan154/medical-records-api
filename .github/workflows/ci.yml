name: CI - Laravel Tests

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    # CouchDB service
    services:
      couchdb:
        image: couchdb:3.5
        ports:
          - 5984:5984
        env:
          COUCHDB_USER: ${{ secrets.COUCHDB_USER }}
          COUCHDB_PASSWORD: ${{ secrets.COUCHDB_PASSWORD }}

    env:
      # Secrets của bạn (ảnh chụp đã có)
      COUCHDB_USER: ${{ secrets.COUCHDB_USER }}
      COUCHDB_PASSWORD: ${{ secrets.COUCHDB_PASSWORD }}
      APP_KEY: ${{ secrets.APP_KEY }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      COUCHDB_URL: http://127.0.0.1:5984

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer
          coverage: none
          extensions: curl,mbstring,openssl,tokenizer,xml,ctype,json

      - name: Composer cache
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install PHP dependencies
        run: |
          set -euo pipefail
          if [ -f composer.json ]; then
            composer install --no-interaction --prefer-dist --no-progress
          fi

      - name: Set up Node (optional)
        if: ${{ hashFiles('**/package.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Node deps (optional)
        if: ${{ hashFiles('**/package.json') != '' }}
        run: |
          set -euo pipefail
          npm ci
          npm run build --if-present

      - name: Prepare .env
        run: |
          set -euo pipefail
          # Lấy .env
          cp -n .env.example .env || true

          # Ghi các biến cần thiết (idempotent)
          upsert () {
            key="$1"; val="$2"
            if grep -q "^${key}=" .env; then
              sed -i "s#^${key}=.*#${key}=${val}#" .env
            else
              echo "${key}=${val}" >> .env
            fi
          }

          upsert APP_ENV testing
          [ -n "${APP_KEY:-}" ] && upsert APP_KEY "${APP_KEY}"
          [ -n "${JWT_SECRET:-}" ] && upsert JWT_SECRET "${JWT_SECRET}"

          upsert COUCHDB_URL "${COUCHDB_URL}"
          upsert COUCHDB_USER "${COUCHDB_USER}"
          upsert COUCHDB_PASSWORD "${COUCHDB_PASSWORD}"

          echo ".env ready"

      - name: Wait for CouchDB
        run: |
          set -euo pipefail
          echo "Đợi CouchDB..."
          for i in {1..60}; do
            if curl -sf "${COUCHDB_URL}/_up" >/dev/null; then
              echo "CouchDB is up"
              exit 0
            fi
            sleep 1
          done
          echo "CouchDB không sẵn sàng sau 60s" >&2
          exit 1

      - name: Bootstrap CouchDB system databases
        run: |
          set -euo pipefail
          auth="${COUCHDB_USER}:${COUCHDB_PASSWORD}"
          base="${COUCHDB_URL}"

          # Kiểm tra đăng nhập (tránh bị lock-out)
          code=$(curl -sS -o /dev/null -w "%{http_code}" -u "$auth" "${base}/_all_dbs")
          if [ "$code" -ne 200 ]; then
            echo "Auth check failed (HTTP $code). Kiểm tra COUCHDB_USER/COUCHDB_PASSWORD." >&2
            exit 1
          fi

          create_db () {
            db="$1"
            code=$(curl -sS -o /dev/null -w "%{http_code}" -u "$auth" -X PUT "${base}/${db}?n=1")
            case "$code" in
              201|202|412) echo "OK: ${db} (HTTP ${code})" ;;
              *) echo "FAILED: ${db} (HTTP ${code})" >&2; exit 1 ;;
            esac
          }

          create_db "_users"
          create_db "_replicator"
          create_db "_global_changes"

          echo "DB list:"
          curl -sS -u "$auth" "${base}/_all_dbs" || true

      - name: Laravel app key (optional)
        run: |
          set -euo pipefail
          if [ -f artisan ]; then
            php artisan config:clear || true
            # Nếu chưa có APP_KEY thì generate
            if ! grep -q "^APP_KEY=" .env || [ -z "$(grep '^APP_KEY=' .env | cut -d= -f2-)" ]; then
              php artisan key:generate --force
            fi
          fi

      - name: Run tests
        run: |
          set -euo pipefail
          if [ -f artisan ]; then
            php artisan test --testsuite=Unit || php artisan test || true
          elif [ -f vendor/bin/pest ]; then
            vendor/bin/pest
          elif [ -f vendor/bin/phpunit ]; then
            vendor/bin/phpunit
          elif grep -q "\"test\":" composer.json 2>/dev/null; then
            composer test
          else
            echo "Không tìm thấy test runner, skip."
          fi
