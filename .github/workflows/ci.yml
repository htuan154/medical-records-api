name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest

    # Truyền secrets xuống mọi step (QUAN TRỌNG)
    env:
      COUCHDB_USER: ${{ secrets.COUCHDB_USER }}
      COUCHDB_PASSWORD: ${{ secrets.COUCHDB_PASSWORD }}
      APP_KEY: ${{ secrets.APP_KEY }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      COUCHDB_URL: http://127.0.0.1:5984
      # Đổi tên DB ứng dụng nếu bạn muốn seed tự động
      APP_DB_NAME: medical-records

    services:
      couchdb:
        image: couchdb:3.5
        ports:
          - 5984:5984
        env:
          COUCHDB_USER: ${{ secrets.COUCHDB_USER }}
          COUCHDB_PASSWORD: ${{ secrets.COUCHDB_PASSWORD }}
          COUCHDB_SINGLE_NODE: "true"
        options: >-
          --health-cmd "curl -fsS http://localhost:5984/_up || exit 1"
          --health-interval 2s
          --health-timeout 2s
          --health-retries 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (Tuỳ chọn) Cài PHP/Laravel hoặc Node tuỳ dự án của bạn
      # - name: Setup PHP
      #   uses: shivammathur/setup-php@v2
      #   with:
      #     php-version: "8.2"
      # - run: composer install --no-interaction --prefer-dist

      # - name: Setup Node
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: "20"
      # - run: npm ci

      - name: Wait for CouchDB healthy
        shell: bash
        run: |
          set -euo pipefail
          for i in {1..60}; do
            if curl -fsS "${COUCHDB_URL}/_up" >/dev/null; then
              echo "CouchDB is up"
              break
            fi
            sleep 1
          done

      - name: Bootstrap CouchDB single-node & system DBs
        shell: bash
        run: |
          set -euo pipefail
          base="${COUCHDB_URL}"
          auth="-u ${COUCHDB_USER}:${COUCHDB_PASSWORD}"

          # Idempotent: enable single node
          curl -fsS $auth -X POST "$base/_cluster_setup" \
            -H "Content-Type: application/json" \
            -d "{\"action\":\"enable_single_node\",\"username\":\"$COUCHDB_USER\",\"password\":\"$COUCHDB_PASSWORD\",\"port\":5984,\"bind_address\":\"0.0.0.0\"}" || true

          # Finish cluster (also idempotent)
          curl -fsS $auth -X POST "$base/_cluster_setup" \
            -H "Content-Type: application/json" \
            -d '{"action":"finish_cluster"}' || true

          # Ensure system DBs exist (PUT trả 201/202 nếu tạo mới, 412 nếu đã có)
          for db in _users _replicator _global_changes; do
            code=$(curl -sS $auth -o /dev/null -w "%{http_code}" -X PUT "$base/$db?n=1")
            echo "PUT $db -> $code"
          done

          echo "All DBs: $(curl -sS $auth "$base/_all_dbs")"

      - name: (Optional) Seed application DB
        if: env.APP_DB_NAME != ''
        shell: bash
        run: |
          set -euo pipefail
          base="${COUCHDB_URL}"
          auth="-u ${COUCHDB_USER}:${COUCHDB_PASSWORD}"
          code=$(curl -sS $auth -o /dev/null -w "%{http_code}" -X PUT "$base/${APP_DB_NAME}")
          echo "PUT ${APP_DB_NAME} -> $code"
