name: CI - Laravel Tests

on:
  push:
    branches: [ "**" ]
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      couchdb:
        image: couchdb:3
        ports:
          - 5984:5984
        env:
          COUCHDB_USER: ${{ secrets.COUCHDB_USER }}
          COUCHDB_PASSWORD: ${{ secrets.COUCHDB_PASSWORD }}
        options: >-
          --health-cmd "curl -fsS http://localhost:5984/_up || exit 1"
          --health-interval 2s
          --health-timeout 2s
          --health-retries 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, json, pdo, bcmath
          coverage: none

      - name: Install Composer deps
        run: composer install --no-interaction --prefer-dist

      - name: Prepare .env for tests
        run: |
          cp .env.example .env 2>/dev/null || true

          # APP_KEY: ưu tiên lấy từ secret, nếu không có thì generate
          if [ -n "${{ secrets.APP_KEY }}" ]; then
            sed -i "s|^APP_KEY=.*|APP_KEY=${{ secrets.APP_KEY }}|" .env || echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          else
            php artisan key:generate --force --ansi
          fi

          # Các biến môi trường cho testing
          {
            echo "APP_ENV=testing"
            echo "APP_DEBUG=true"
            echo "APP_URL=http://localhost:9000"

            # CouchDB trên GitHub Actions truy cập qua localhost
            echo "COUCHDB_HOST=127.0.0.1"
            echo "COUCHDB_PORT=${{ vars.COUCHDB_PORT || '5984' }}"
            echo "COUCHDB_USERNAME=${{ secrets.COUCHDB_USER }}"
            echo "COUCHDB_PASSWORD=${{ secrets.COUCHDB_PASSWORD }}"
            echo "COUCHDB_DATABASE_PREFIX="

            # JWT
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}"
            echo "JWT_ALGO=${{ vars.JWT_ALGO || 'HS256' }}"
            echo "JWT_TTL=${{ vars.JWT_TTL || '1440' }}"

            # Session/Queue
            echo "QUEUE_CONNECTION=${{ vars.QUEUE_CONNECTION || 'sync' }}"
            echo "SESSION_DRIVER=${{ vars.SESSION_DRIVER || 'file' }}"
            echo "SESSION_LIFETIME=${{ vars.SESSION_LIFETIME || '120' }}"

            # Sanctum
            echo "SANCTUM_STATEFUL_DOMAINS=${{ vars.SANCTUM_STATEFUL_DOMAINS || 'localhost,localhost:4200,localhost:9000' }}"
            echo "SESSION_DOMAIN=${{ vars.SESSION_DOMAIN || 'localhost' }}"

            # Mail (nếu cần)
            echo "MAIL_MAILER=${{ vars.MAIL_MAILER || 'smtp' }}"
            echo "MAIL_HOST=${{ vars.MAIL_HOST || 'smtp.gmail.com' }}"
            echo "MAIL_PORT=${{ vars.MAIL_PORT || '587' }}"
            echo "MAIL_ENCRYPTION=${{ vars.MAIL_ENCRYPTION || 'tls' }}"
            [ -n "${{ secrets.MAIL_USERNAME }}" ] && echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}"
            [ -n "${{ secrets.MAIL_PASSWORD }}" ] && echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}"
            [ -n "${{ vars.MAIL_FROM_ADDRESS }}" ] && echo "MAIL_FROM_ADDRESS=${{ vars.MAIL_FROM_ADDRESS }}"
            echo "MAIL_FROM_NAME=Medical Records API"
          } >> .env

          # PHPUnit ưu tiên .env.testing
          cp .env .env.testing || true
          php artisan config:clear

      - name: Wait for CouchDB & create system DBs
        run: |
          for i in {1..60}; do
            if curl -fsS http://127.0.0.1:5984/_up > /dev/null; then
              echo "CouchDB is up"; break
            fi
            sleep 1
          done
          # Tạo _users để tránh warning khi mới khởi động
          curl -fsS -u "${COUCHDB_USERNAME}:${COUCHDB_PASSWORD}" -X PUT "http://127.0.0.1:5984/_users?n=1" || true
          curl -fsS -u "${COUCHDB_USERNAME}:${COUCHDB_PASSWORD}" -X PUT "http://127.0.0.1:5984/_replicator?n=1" || true
          curl -fsS -u "${COUCHDB_USERNAME}:${COUCHDB_PASSWORD}" -X PUT "http://127.0.0.1:5984/_global_changes?n=1" || true

      - name: Run PHPUnit
        run: |
          if [ -f vendor/bin/phpunit ] && git ls-files "tests/**/*.php" | grep -q .; then
            vendor/bin/phpunit --colors=always
          else
            echo "No test files, skipping."
          fi
