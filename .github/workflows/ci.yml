name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      couchdb:
        image: couchdb:3
        ports:
          - 5984:5984
        env:
          COUCHDB_USER: admin
          COUCHDB_PASSWORD: admin123
        options: >-
          --health-cmd="curl -f http://localhost:5984/_up || exit 1"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, zip, gd, bcmath, curl
          coverage: none
          tools: composer:v2

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Prepare .env (CI)
        run: |
          cp .env.example .env || true
          echo "APP_ENV=testing" >> .env
          echo "APP_DEBUG=true" >> .env
          echo "APP_URL=http://localhost:9000" >> .env
          echo "COUCHDB_HOST=localhost" >> .env
          echo "COUCHDB_PORT=5984" >> .env
          echo 'COUCHDB_USERNAME="admin"' >> .env
          echo 'COUCHDB_PASSWORD="admin123"' >> .env
          echo "QUEUE_CONNECTION=sync" >> .env
          php -r "file_put_contents('.env', str_replace('APP_KEY=', 'APP_KEY='.(\$k='base64:'.base64_encode(random_bytes(32))).\"\n\", file_get_contents('.env')));"
          php artisan config:clear

      - name: Run Pint (optional)
        run: |
          if [ -f vendor/bin/pint ]; then vendor/bin/pint --test; fi

      - name: PHPUnit
        run: |
          if [ -f vendor/bin/phpunit ]; then vendor/bin/phpunit --colors=always; else echo "No phpunit found, skipping"; fi

      - name: Generate Swagger (non-blocking)
        continue-on-error: true
        run: |
          if [ -f artisan ]; then php artisan l5-swagger:generate; fi
